import React, { createContext, useContext, useState } from "react";

// Tavutuksen konteksti
const TaskSyllabificationContext = createContext();

export function TaskSyllabificationProvider({ children }) {
  const [taskSyllabification, setTaskSyllabification] = useState(true);

  // Kovakoodatut tavutukset
  const syllabify = (text) => {
    const syllables = {
      // ImageToNumber.js
      "Kuva numeroiksi": "KU-VA NU-ME-ROIK-SI",
      "Montako vasaraa n√§et n√§yt√∂ll√§?": "MON-TA-KO VA-SA-RAA N√Ñ-ET N√ÑY-T√ñL-L√Ñ?",

      // Comparison.js
      "Vertailu": "VER-TAI-LU",
      "Valitse yht√§suuri tai suurempi": "VA-LIT-SE YH-T√Ñ-SUU-RI TAI SUU-REM-PI",
      "Valitse yht√§suuri tai pienempi": "VA-LIT-SE YH-T√Ñ-SUU-RI TAI PIE-NEM-PI",

      // SoundToNumber.js
      "√Ñ√§ni numeroiksi": "√Ñ√Ñ-NI NU-ME-ROIK-SI",
      "Kuuntele numero üîä": "KUUN-TE-LE NU-ME-RO üîä",


      // Bonds.js
      "Hajonta": "HA-JON-TA",
      "T√§ydenn√§ puuttuva luku niin, ett√§ laatikoiden luvut ovat yhteens√§ yht√§ paljon kuin pallon luku.":
      "T√ÑY-DEN-N√Ñ PUUT-TU-VA LU-KU N√ÑIN, ET-T√Ñ LAA-TIKOIDEN LU-VUT O-VAT YH-TEENS√Ñ YH-T√Ñ PAL-JON KUIN PAL-LON LU-KU.",
      "Aloita": "A-LOI-TA",
      "T√§ydenn√§ puuttuva luku.": "T√ÑY-DEN-N√Ñ PUUT-TU-VA LU-KU.",
      "Tarkista": "TAR-KIS-TA",
    };
  
    // Jos tavutustoiminto ei ole k√§yt√∂ss√§, palautetaan alkuper√§inen teksti
    if (!taskSyllabification) {
      return text;
    }
  
    // Palautetaan tavutettu teksti, jos l√∂ytyy m√§√§ritelty tekstikohde, muuten alkuper√§inen
    return syllables[text] || text;
  };
  
  

  return (
    <TaskSyllabificationContext.Provider
      value={{ taskSyllabification, setTaskSyllabification, syllabify }}
    >
      {children}
    </TaskSyllabificationContext.Provider>
  );
}

export function useTaskSyllabification() {
  return useContext(TaskSyllabificationContext);
}
